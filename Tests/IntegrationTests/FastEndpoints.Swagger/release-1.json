{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Web API",
    "version": "v1.0"
  },
  "paths": {
    "/api/admin/login/ver1": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "this is a short summary",
        "description": "this is the long description of the endpoint",
        "operationId": "PostAdminLoginEndpoint_V1",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "all good",
            "headers": {
              "x-some-custom-header": {}
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "indicates an error"
          },
          "403": {
            "description": "forbidden when login fails"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "this is a short summary",
        "description": "this is the long description of the endpoint",
        "operationId": "PutAdminLoginEndpoint_V1",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "all good",
            "headers": {
              "x-some-custom-header": {}
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "indicates an error"
          },
          "403": {
            "description": "forbidden when login fails"
          }
        }
      },
      "patch": {
        "tags": [
          "Admin"
        ],
        "summary": "this is a short summary",
        "description": "this is the long description of the endpoint",
        "operationId": "PatchAdminLoginEndpoint_V1",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "all good",
            "headers": {
              "x-some-custom-header": {}
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "indicates an error"
          },
          "403": {
            "description": "forbidden when login fails"
          }
        }
      }
    },
    "/api/customer/new/{RefererID}": {
      "post": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "PostCustomersCreateEndpoint1",
        "parameters": [
          {
            "name": "refererID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CustomersCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      },
      "get": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "GetCustomersCreateEndpoint1",
        "parameters": [
          {
            "name": "refererID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "description": "the name of the cutomer goes here",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phoneNumbers",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              ""
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/customer/{cID}/new/{SourceID}": {
      "post": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "PostCustomersCreateEndpoint2",
        "parameters": [
          {
            "name": "cID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      },
      "get": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "GetCustomersCreateEndpoint2",
        "parameters": [
          {
            "name": "cID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phoneNumbers",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              ""
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/customer/save": {
      "post": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "PostCustomersCreateEndpoint3",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      },
      "get": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "GetCustomersCreateEndpoint3",
        "parameters": [
          {
            "name": "cID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phoneNumbers",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              ""
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "CustomersUpdateEndpoint2",
        "parameters": [
          {
            "name": "customerID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "test default val"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "query test default val"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/customer/new/2{RefererID}": {
      "post": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "PostCustomersCreateWithPropertiesDIEndpoint1",
        "parameters": [
          {
            "name": "refererID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CustomersCreateWithPropertiesDIRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersCreateWithPropertiesDIRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      },
      "get": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "GetCustomersCreateWithPropertiesDIEndpoint1",
        "parameters": [
          {
            "name": "refererID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "description": "the name of the cutomer goes here",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phoneNumbers",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              ""
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/customer/{cID}/new2/{SourceID}": {
      "post": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "PostCustomersCreateWithPropertiesDIEndpoint2",
        "parameters": [
          {
            "name": "cID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      },
      "get": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "GetCustomersCreateWithPropertiesDIEndpoint2",
        "parameters": [
          {
            "name": "cID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phoneNumbers",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              ""
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/customer/save2": {
      "post": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "PostCustomersCreateWithPropertiesDIEndpoint3",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      },
      "get": {
        "tags": [
          "Customer Save"
        ],
        "operationId": "GetCustomersCreateWithPropertiesDIEndpoint3",
        "parameters": [
          {
            "name": "cID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phoneNumbers",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              ""
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/customer/list/recent/ver1": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "CustomersListRecentEndpoint_V1",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersListRecentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [
              "admin",
              "staff"
            ]
          }
        ]
      }
    },
    "/api/customer/login": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "CustomersLoginEndpoint",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/customer/update": {
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "CustomersUpdateEndpoint1",
        "parameters": [
          {
            "name": "customerID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "test default val"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "query test default val"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/customer/update-with-header": {
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "CustomersUpdateWithHeaderEndpoint",
        "parameters": [
          {
            "name": "customerID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tenant-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersUpdateWithHeaderRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/inventory/get-product/{ProductID}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "operationId": "InventoryGetProductEndpoint",
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryGetProductResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/inventory/list/recent/{CategoryID}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "operationId": "InventoryListRecentEndpoint",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryListRecentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/inventory/manage/create": {
      "post": {
        "tags": [
          "test",
          "Inventory"
        ],
        "operationId": "CreateInventoryItem",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryManageCreateRequest"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "id": 1,
                    "name": "first name",
                    "description": "first description",
                    "price": 10.0,
                    "qtyOnHand": 10,
                    "modifiedBy": null,
                    "generateFullUrl": false
                  }
                },
                "Example 2": {
                  "value": {
                    "id": 200,
                    "name": "second  name",
                    "description": "description two",
                    "price": 209.0,
                    "qtyOnHand": 290,
                    "modifiedBy": null,
                    "generateFullUrl": false
                  }
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/inventory/manage/delete/{itemID}": {
      "delete": {
        "tags": [
          "Inventory"
        ],
        "operationId": "InventoryManageDeleteEndpoint",
        "parameters": [
          {
            "name": "itemID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "test default val"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/inventory/manage/update": {
      "put": {
        "tags": [
          "Inventory"
        ],
        "operationId": "InventoryManageUpdateEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryManageUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/sales/orders/create/{guidTest}": {
      "post": {
        "tags": [
          "Sales"
        ],
        "operationId": "Orders_SalesOrdersCreateEndpoint1",
        "parameters": [
          {
            "name": "guidTest",
            "in": "path",
            "required": true,
            "description": "this is a guid property description",
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrdersCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "x-header-one": {
                "description": "",
                "schema": {
                  "title": "SystemInt32",
                  "type": "integer",
                  "format": "int32"
                },
                "example": 0
              },
              "header2": {
                "description": "",
                "schema": {
                  "title": "SystemDateOnly",
                  "type": "string",
                  "format": "date"
                },
                "example": "2020-10-10"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrdersCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/sales/orders/create": {
      "post": {
        "tags": [
          "Sales"
        ],
        "operationId": "Orders_SalesOrdersCreateEndpoint2",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrdersCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "x-header-one": {
                "description": "",
                "schema": {
                  "title": "SystemInt32",
                  "type": "integer",
                  "format": "int32"
                },
                "example": 0
              },
              "header2": {
                "description": "",
                "schema": {
                  "title": "SystemDateOnly",
                  "type": "string",
                  "format": "date"
                },
                "example": "2020-10-10"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrdersCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/sales/orders/retrieve/{orderID}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "operationId": "Orders_SalesOrdersRetrieveEndpoint",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant-id",
            "in": "header",
            "description": "this is the tenant id",
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrdersRetrieveResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/antiforgery/token": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "antiforgery_TestCasesAntiforgeryTestGetAfTokenEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesAntiforgeryTestTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/antiforgery/render-form": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "antiforgery_TestCasesAntiforgeryTestRenderFormHtml",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/test-cases/antiforgery/validate": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "antiforgery_TestCasesAntiforgeryTestVerifyAfToken",
        "requestBody": {
          "x-name": "VerificationRequest",
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesAntiforgeryTestVerificationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/tests/commands": {
      "get": {
        "tags": [
          "Tests"
        ],
        "operationId": "TestCasesCommandBusTestEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/tests/command-handler": {
      "get": {
        "tags": [
          "Tests"
        ],
        "operationId": "TestCasesCommandHandlerTestConcreteCmdEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/tests/generic-command-handler": {
      "get": {
        "tags": [
          "Tests"
        ],
        "operationId": "TestCasesCommandHandlerTestGenericCmdEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "guid"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tests/generic-command-handler-without-result": {
      "get": {
        "tags": [
          "Tests"
        ],
        "operationId": "TestCasesCommandHandlerTestGenericCmdWithoutResultEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/custom-request-binder": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesCustomRequestBinderEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesCustomRequestBinderRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesCustomRequestBinderResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/data-annotation": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesDataAnnotationCompliantEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesDataAnnotationCompliantRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesDataAnnotationCompliantRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/test-cases/dont-bind-attribute-test/{name}": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesDontBindAttributeTestEndpoint",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesDontBindAttributeTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/{number}": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesDontCatchExceptionsEndpoint",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/test-cases/dupe-param-binding-for-ienumerable-props": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesDupeParamBindingForIEnumerablePropsEndpoint",
        "parameters": [
          {
            "name": "strings",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              ""
            ]
          },
          {
            "name": "moreStrings",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              ""
            ]
          },
          {
            "name": "doubles",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "example": [
              0.0
            ]
          },
          {
            "name": "ints",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "example": [
              0
            ]
          },
          {
            "name": "guids",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "guid"
              }
            },
            "example": [
              ""
            ]
          },
          {
            "name": "dates",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            },
            "example": [
              "2020-10-10"
            ]
          },
          {
            "name": "persons",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TestCasesDupeParamBindingForIEnumerablePropsRequest_Person"
              }
            },
            "example": [
              {
                "name": "name",
                "age": 0
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesDupeParamBindingForIEnumerablePropsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/empty-request-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesEmptyRequestTestEmptyRequestEndpoint",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": [
              "admin"
            ]
          },
          {
            "ApiKey": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api/test-cases/output-cache-bypass-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesEndpointsCacheBypassTestCachedOutputEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/response-cache-bypass-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesEndpointsCacheBypassTestCachedResponseEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/event-bus-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesEventBusTestEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/form-binding-complex-dtos": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesFormBindingComplexDtosEndpoint",
        "requestBody": {
          "x-name": "book",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesFormBindingComplexDtosBook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "put": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesFormBindingComplexDtosToFormEndpoint",
        "requestBody": {
          "x-name": "Book",
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesFormBindingComplexDtosBook"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesFormBindingComplexDtosBook"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/form-file-collection-binding": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesFormFileBindingTestEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesFormFileBindingTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesFormFileBindingTestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/from-body-binding/{id}": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesFromBodyJsonBindingEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesFromBodyJsonBindingProduct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesFromBodyJsonBindingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mobile/api/test-cases/global-prefix-override/{id}": {
      "post": {
        "tags": [
          "Mobile"
        ],
        "summary": "plain request endpoint summary",
        "operationId": "TestCasesGlobalRoutePrefixOverrideTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "overriden id text",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesGlobalRoutePrefixOverrideTestRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesGlobalRoutePrefixOverrideTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesGlobalRoutePrefixOverrideTestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesGlobalRoutePrefixOverrideTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test/hydrated-test-url-generator-test/{id}/{guid}/{stringBindFrom}/{nullableString}/{fromClaim}/{fromHeader}/{hasPermission}": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "GetTestCasesHydratedTestUrlGeneratorTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "stringBindFrom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nullableString",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromClaim",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromHeader",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasPermission",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasPermission",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "tenant-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Test"
        ],
        "operationId": "PostTestCasesHydratedTestUrlGeneratorTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "stringBindFrom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nullableString",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromClaim",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromHeader",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasPermission",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasPermission",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "tenant-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Test"
        ],
        "operationId": "PutTestCasesHydratedTestUrlGeneratorTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "stringBindFrom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nullableString",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromClaim",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromHeader",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasPermission",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasPermission",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "tenant-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Test"
        ],
        "operationId": "PatchTestCasesHydratedTestUrlGeneratorTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "stringBindFrom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nullableString",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromClaim",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromHeader",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasPermission",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasPermission",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "tenant-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Test"
        ],
        "operationId": "DeleteTestCasesHydratedTestUrlGeneratorTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "stringBindFrom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nullableString",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromClaim",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromHeader",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasPermission",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasPermission",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "tenant-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/tests/iauth-injection": {
      "get": {
        "tags": [
          "Tests"
        ],
        "operationId": "TestCasesIAuthorizationServiceInjectionTestEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/idempotency/{id}": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesIdempotencyEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesIdempotencyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/included-validator": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesIncludedValidatorTestEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesIncludedValidatorTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/json-array-binding-for-ienumerable-props": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesJsonArrayBindingForIEnumerablePropsEndpoint",
        "parameters": [
          {
            "name": "doubles",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "example": [
              0.0
            ]
          },
          {
            "name": "ints",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "example": [
              0
            ]
          },
          {
            "name": "guids",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "guid"
              }
            },
            "example": [
              ""
            ]
          },
          {
            "name": "dates",
            "in": "query",
            "style": "form",
            "explode": true,
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            },
            "example": [
              "2020-10-10"
            ]
          },
          {
            "name": "steven",
            "in": "query",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TestCasesJsonArrayBindingForIEnumerablePropsRequest_Person"
                }
              ]
            },
            "example": {
              "age": 0,
              "name": "name"
            }
          },
          {
            "name": "dict",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesJsonArrayBindingForIEnumerablePropsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/json-array-binding-to-ienumerable-dto": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesJsonArrayBindingToIEnumerableDtoEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesJsonArrayBindingToIEnumerableDtoRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestCasesJsonArrayBindingToIEnumerableDtoResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/json-array-binding-to-list-of-models": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesJsonArrayBindingToListOfModelsEndpoint",
        "requestBody": {
          "x-name": "List`1",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TestCasesJsonArrayBindingToListOfModelsRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestCasesJsonArrayBindingToListOfModelsResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/keyed-services-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesKeyedServicesTestsEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/mapper-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesMapperTestEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesMapperTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesMapperTestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/missing-claim-test/dont-throw": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesMissingClaimTestDontThrowIfMissingEndpoint",
        "parameters": [
          {
            "name": "testProp",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/missing-claim-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesMissingClaimTestThrowIfMissingEndpoint",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/missing-header-test/dont-throw": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesMissingHeaderTestDontThrowIfMissingEndpoint",
        "parameters": [
          {
            "name": "tenantID",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "DontThrowIfMissingRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesMissingHeaderTestDontThrowIfMissingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/missing-header-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesMissingHeaderTestThrowIfMissingEndpoint",
        "parameters": [
          {
            "name": "tenantID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/on-before-on-after-validate": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesOnBeforeAfterValidationTestEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesOnBeforeAfterValidationTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesOnBeforeAfterValidationTestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/test-cases/plaintext/{id}": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "summary": "plain request endpoint summary",
        "operationId": "TestCasesPlainTextRequestTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "overriden id text",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesPlainTextRequestTestRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesPlainTextRequestTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesPlainTextRequestTestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesPlainTextRequestTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/testcases/post-processor-handles-exception": {
      "get": {
        "tags": [
          "Testcases"
        ],
        "operationId": "TestCasesPostProcessorTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesPostProcessorTestExceptionDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/testcases/post-processor-handles-exception/no-post-processor": {
      "get": {
        "tags": [
          "Testcases"
        ],
        "operationId": "TestCasesPostProcessorTestEpNoPostProcessor",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/testcases/pre-processor-shortcircuit-while-validator-fails": {
      "get": {
        "tags": [
          "Testcases"
        ],
        "operationId": "TestCasesPrecessorShortWhileValidatorFailsEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/pre-processor-is-run-on-validation-failure": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesPreProcessorIsRunOnValidationFailureEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesPreProcessorIsRunOnValidationFailureRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesPreProcessorIsRunOnValidationFailureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/processor-attributes-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesProcessorAttributesTestEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesProcessorAttributesTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/processor-state-sharing": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesProcessorStateTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/query-object-binding-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "summary": "summary",
        "description": "descr",
        "operationId": "QueryObjectBindingTest",
        "parameters": [
          {
            "name": "string",
            "in": "query",
            "required": true,
            "description": "this is a string prop xml comment",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bool",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "int",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "long",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "double",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "enum",
            "in": "query",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SystemDayOfWeek"
                }
              ]
            }
          },
          {
            "name": "person",
            "in": "query",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TestCasesQueryObjectBindingTestPerson"
                }
              ]
            },
            "example": {
              "id": "id",
              "name": "name",
              "age": 0,
              "child": {
                "id": "id",
                "name": "name",
                "age": 0,
                "strings": [
                  ""
                ],
                "favoriteDays": [
                  0
                ],
                "isHidden": false
              },
              "numbers": [
                0
              ],
              "favoriteDay": 0,
              "byteEnum": 0,
              "isHidden": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesQueryObjectBindingTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/query-arrays-of-objects-binding-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "summary": "summary",
        "description": "descr",
        "operationId": "QueryArraysOfObjectsBindingTest",
        "parameters": [
          {
            "name": "person",
            "in": "query",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TestCasesQueryObjectWithObjectsArrayBindingTestPerson"
                }
              ]
            },
            "example": {
              "child": {
                "objects": [
                  {
                    "string": "string",
                    "bool": false,
                    "int": 0,
                    "long": 0,
                    "double": 0.0,
                    "enum": 0
                  }
                ]
              },
              "objects": [
                {
                  "string": "string",
                  "bool": false,
                  "int": 0,
                  "long": 0,
                  "double": 0.0,
                  "enum": 0
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesQueryObjectWithObjectsArrayBindingTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/ep-witout-req-query-param-binding-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesQueryParamBindingInEpWithoutReqEpWithoutReqQueryParamBindingTest",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesQueryParamBindingInEpWithoutReqResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/range": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesRangeHandlingTestEndpoint",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "206": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/global-throttle-error-response": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesRateLimitTestsGlobalErrorResponseTest",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesRateLimitTestsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/login": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "operationId": "TestCasesRefreshTokensTestLoginEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsSecurityTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/refresh-token": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "operationId": "TestCasesRefreshTokensTestTokenService",
        "requestBody": {
          "x-name": "TokenRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FastEndpointsSecurityTokenRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsSecurityTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/ep-witout-req-route-binding-test/{CustomerID}/{OtherID}": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesRouteBindingInEpWithoutReqEpWithoutReqRouteBindingTest",
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "otherID",
            "in": "path",
            "required": true,
            "description": "the description for other id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesRouteBindingInEpWithoutReqResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/route-binding-test/{string}/{bool}/{int}/{long}/{double}/{decimal}": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "summary": "summary",
        "description": "descr",
        "operationId": "RouteBindingTest",
        "parameters": [
          {
            "name": "string",
            "in": "path",
            "required": true,
            "description": "this is a string prop xml comment",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bool",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "int",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "long",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "double",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "decimal",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "person",
            "in": "query",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TestCasesRouteBindingTestPerson"
                }
              ]
            },
            "example": {
              "id": "id",
              "name": "name",
              "age": 0,
              "child": {
                "id": "id",
                "name": "name",
                "age": 0,
                "strings": [
                  ""
                ]
              },
              "numbers": [
                0
              ]
            }
          }
        ],
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesRouteBindingTestRequest"
              }
            },
            "test1/test1": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesRouteBindingTestRequest"
              }
            },
            "test2/test2": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesRouteBindingTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesRouteBindingTestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/routing/user/{userId}": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesRoutingNonOptionalRouteParamTest",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/routing/offer/{offerId}": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesRoutingOptionalRouteParamTest",
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/service-reg-gen-test": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesServiceRegistrationGeneratorTestEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/testcases/stj-infinite-recursion": {
      "get": {
        "tags": [
          "Testcases"
        ],
        "operationId": "TestCasesSTJInfiniteRecursionTestEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesSTJInfiniteRecursionTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/typed-header-binding-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesTypedHeaderBindingTestMyEndpoint",
        "parameters": [
          {
            "name": "content-Disposition",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "MyRequest",
          "description": "",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesTypedHeaderBindingTestMyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesTypedHeaderBindingTestMyRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/multi-test": {
      "post": {
        "tags": [
          "MultiTest"
        ],
        "operationId": "TestCasesTypedResultTestMultiResultEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesTypedResultTestRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCasesTypedResultTestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/test-cases/unit-test-concurrency": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesUnitTestConcurrencyTestEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-cases/array-validation-error-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesValidationErrorTestArrayValidationErrorTestEndpoint",
        "requestBody": {
          "x-name": "ArrayRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesValidationErrorTestArrayRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/dictionary-validation-error-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesValidationErrorTestDictionaryValidationErrorTestEndpoint",
        "requestBody": {
          "x-name": "DictionaryRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesValidationErrorTestDictionaryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/list-in-list-validation-error-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesValidationErrorTestListInListValidationErrorTestEndpoint",
        "requestBody": {
          "x-name": "ListInListRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesValidationErrorTestListInListRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/list-validation-error-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesValidationErrorTestListValidationErrorTestEndpoint",
        "requestBody": {
          "x-name": "ListRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesValidationErrorTestListRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/test-cases/object-array-validation-error-test": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCasesValidationErrorTestObjectArrayValidationErrorTestEndpoint",
        "requestBody": {
          "x-name": "ObjectArrayRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCasesValidationErrorTestObjectArrayRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/uploads/image/save": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "operationId": "PostUploadsImageSaveEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadsImageSaveRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Uploads"
        ],
        "operationId": "PutUploadsImageSaveEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadsImageSaveRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/api/uploads/image/save-typed": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "operationId": "PostUploadsImageSaveTypedEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadsImageSaveTypedRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "test/image": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "test/notcontent": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Uploads"
        ],
        "operationId": "PutUploadsImageSaveTypedEndpoint",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadsImageSaveTypedRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "test/image": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "test/notcontent": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/test": {
      "get": {
        "tags": [
          "map-get"
        ],
        "operationId": "GetTest",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/test/{testId}": {
      "get": {
        "tags": [
          "map-get"
        ],
        "operationId": "GetTest2",
        "parameters": [
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminLoginResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "jwtToken": {
            "type": "string",
            "description": "the jwt token",
            "example": "blahblahblah"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AdminLoginRequest": {
        "type": "object",
        "description": "the admin login request",
        "example": {
          "userName": "custom example user name from summary",
          "password": "custom example password from summary"
        },
        "additionalProperties": false,
        "required": [
          "userName",
          "password"
        ],
        "properties": {
          "userName": {
            "type": "string",
            "description": "overriden username text",
            "default": "admin",
            "maxLength": 50,
            "minLength": 3,
            "nullable": false,
            "example": "example username"
          },
          "password": {
            "type": "string",
            "description": "the admin password",
            "minLength": 3,
            "nullable": false,
            "example": "example password"
          }
        }
      },
      "CustomersCreateRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "CustomersCreateWithPropertiesDIRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "CustomersListRecentResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SystemCollectionsGenericKeyValuePairOfStringAndInt32"
            }
          }
        }
      },
      "SystemCollectionsGenericKeyValuePairOfStringAndInt32": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomersUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "CustomersUpdateWithHeaderRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "InventoryGetProductResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productID": {
            "type": "string",
            "nullable": true
          },
          "Last_Moddded": {
            "type": "integer",
            "description": "blah blah blah",
            "format": "int64"
          }
        }
      },
      "InventoryListRecentResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InventoryManageCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "modifiedBy"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "qtyOnHand": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedBy": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "generateFullUrl": {
            "type": "boolean"
          }
        }
      },
      "InventoryManageDeleteRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "InventoryManageUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "modifiedBy"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "qtyOnHand": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedBy": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "FastEndpointsErrorResponse": {
        "type": "object",
        "description": "the dto used to send an error response to the client",
        "additionalProperties": false,
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "the http status code sent to the client. default is 400.",
            "format": "int32",
            "default": 400
          },
          "message": {
            "type": "string",
            "description": "the message for the error response",
            "default": "One or more errors occurred!"
          },
          "errors": {
            "type": "object",
            "description": "the collection of errors for the current context",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "SalesOrdersCreateResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "orderID": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "anotherMsg": {
            "type": "string",
            "nullable": true
          },
          "guidTest": {
            "type": "string",
            "format": "guid"
          },
          "event": {
            "$ref": "#/components/schemas/TestCasesEventHandlingTestSomeEvent"
          }
        }
      },
      "TestCasesEventHandlingTestSomeEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "one": {
            "type": "integer",
            "format": "int32"
          },
          "two": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SalesOrdersCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "productID": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SalesOrdersRetrieveResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "SalesOrdersRetrieveRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tenantID": {
            "type": "string",
            "description": "this is the tenant id"
          }
        }
      },
      "TestCasesAntiforgeryTestTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenName": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TestCasesAntiforgeryTestVerificationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "tokenResponse": {
            "$ref": "#/components/schemas/TestCasesAntiforgeryTestTokenResponse"
          }
        }
      },
      "TestCasesCustomRequestBinderResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCasesCustomRequestBinderRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TestCasesCustomRequestBinderRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "product": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TestCasesCustomRequestBinderProduct"
              }
            ]
          },
          "customerID": {
            "type": "string"
          }
        }
      },
      "TestCasesCustomRequestBinderProduct": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "TestCasesDataAnnotationCompliantRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "CurrentId",
            "format": "int32",
            "maximum": 99.0,
            "minimum": 10.0
          },
          "name": {
            "type": "string",
            "maxLength": 10,
            "minLength": 2
          }
        }
      },
      "TestCasesDontBindAttributeTestRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestCasesDontCatchExceptionsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesDupeParamBindingForIEnumerablePropsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCasesDupeParamBindingForIEnumerablePropsRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TestCasesDupeParamBindingForIEnumerablePropsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesDupeParamBindingForIEnumerablePropsRequest_Person": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestCasesEndpointsCacheBypassTestRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesFormBindingComplexDtosRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "book": {
            "$ref": "#/components/schemas/TestCasesFormBindingComplexDtosBook"
          }
        }
      },
      "TestCasesFormBindingComplexDtosBook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "coverImage": {
            "type": "string",
            "format": "binary"
          },
          "sourceFiles": {
            "type": "array",
            "items": {}
          },
          "mainAuthor": {
            "$ref": "#/components/schemas/TestCasesFormBindingComplexDtosAuthor"
          },
          "coAuthors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCasesFormBindingComplexDtosAuthor"
            }
          },
          "barCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "TestCasesFormBindingComplexDtosAuthor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "profileImage": {
            "type": "string",
            "format": "binary"
          },
          "documentFiles": {
            "type": "array",
            "items": {}
          },
          "mainAddress": {
            "$ref": "#/components/schemas/TestCasesFormBindingComplexDtosAddress"
          },
          "otherAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCasesFormBindingComplexDtosAddress"
            }
          }
        }
      },
      "TestCasesFormBindingComplexDtosAddress": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "street": {
            "type": "string"
          },
          "mainImage": {
            "type": "string",
            "format": "binary"
          },
          "alternativeImages": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "TestCasesFormFileBindingTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "file1Name": {
            "type": "string"
          },
          "file2Name": {
            "type": "string"
          },
          "carNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jetNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TestCasesFormFileBindingTestRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "file1": {
            "type": "string",
            "format": "binary"
          },
          "file2": {
            "type": "string",
            "format": "binary"
          },
          "cars": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "jets": {
            "type": "array",
            "items": {}
          }
        }
      },
      "TestCasesFromBodyJsonBindingResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCasesFromBodyJsonBindingRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TestCasesFromBodyJsonBindingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product": {
            "$ref": "#/components/schemas/TestCasesFromBodyJsonBindingProduct"
          }
        }
      },
      "TestCasesFromBodyJsonBindingProduct": {
        "type": "object",
        "example": {
          "name": "test product name",
          "price": 200.22
        },
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "product id goes here",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "this is the name of the product"
          },
          "price": {
            "type": "number",
            "description": "product price goes here",
            "format": "decimal",
            "minimum": 200.0,
            "exclusiveMinimum": true
          }
        }
      },
      "TestCasesGlobalRoutePrefixOverrideTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bodyContent": {
            "type": "string"
          }
        }
      },
      "TestCasesGlobalRoutePrefixOverrideTestRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FastEndpointsPlainTextRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "FastEndpointsPlainTextRequest": {
        "type": "object",
        "description": "use this dto if you need to model bind the raw content body of an incoming http request or you may implement the IPlainTextRequest interface on your own request dto.",
        "additionalProperties": false,
        "properties": {
          "content": {
            "type": "string",
            "description": "overriden content text"
          }
        }
      },
      "TestCasesHydratedTestUrlGeneratorTestRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesIdempotencyResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "ticks": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestCasesIdempotencyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesIncludedValidatorTestRequest": {
        "required": [
          "name"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCasesIncludedValidatorTestBaseRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "minLength": 5,
                "nullable": false
              }
            }
          }
        ]
      },
      "TestCasesIncludedValidatorTestBaseRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 5.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          }
        }
      },
      "TestCasesJsonArrayBindingForIEnumerablePropsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCasesJsonArrayBindingForIEnumerablePropsRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TestCasesJsonArrayBindingForIEnumerablePropsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesJsonArrayBindingForIEnumerablePropsRequest_Person": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TestCasesJsonArrayBindingToIEnumerableDtoResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCasesJsonArrayBindingToIEnumerableDtoItem"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TestCasesJsonArrayBindingToIEnumerableDtoItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TestCasesJsonArrayBindingToIEnumerableDtoRequest": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TestCasesJsonArrayBindingToIEnumerableDtoItem"
        }
      },
      "TestCasesJsonArrayBindingToListOfModelsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCasesJsonArrayBindingToListOfModelsRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "TestCasesJsonArrayBindingToListOfModelsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "TestCasesMapperTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestCasesMapperTestRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestCasesMissingClaimTestDontThrowIfMissingRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesMissingClaimTestThrowIfMissingRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesMissingHeaderTestDontThrowIfMissingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tenantID": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TestCasesMissingHeaderTestThrowIfMissingRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesOnBeforeAfterValidationTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "host": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TestCasesOnBeforeAfterValidationTestRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "verb": {
            "$ref": "#/components/schemas/FastEndpointsHttp"
          },
          "host": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FastEndpointsHttp": {
        "type": "integer",
        "description": "enum for specifying a http verb",
        "x-enumNames": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      "TestCasesPlainTextRequestTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bodyContent": {
            "type": "string"
          }
        }
      },
      "TestCasesPlainTextRequestTestRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FastEndpointsPlainTextRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TestCasesPostProcessorTestExceptionDetailsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "TestCasesPostProcessorTestRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesPrecessorShortWhileValidatorFailsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesPreProcessorIsRunOnValidationFailureResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "TestCasesPreProcessorIsRunOnValidationFailureRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 5,
            "nullable": false
          },
          "failureCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestCasesProcessorAttributesTestRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TestCasesProcessorStateTestRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesQueryObjectBindingTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "string": {
            "type": "string",
            "description": "Some string property"
          },
          "bool": {
            "type": "boolean",
            "description": "Some bool property"
          },
          "int": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "long": {
            "type": "integer",
            "format": "int64"
          },
          "double": {
            "type": "number",
            "format": "double"
          },
          "enum": {
            "$ref": "#/components/schemas/SystemDayOfWeek"
          },
          "person": {
            "$ref": "#/components/schemas/TestCasesQueryObjectBindingTestPerson"
          }
        }
      },
      "SystemDayOfWeek": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "TestCasesQueryObjectBindingTestPerson": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "child": {
            "$ref": "#/components/schemas/TestCasesQueryObjectBindingTestNestedPerson"
          },
          "numbers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "favoriteDay": {
            "$ref": "#/components/schemas/SystemDayOfWeek"
          },
          "byteEnum": {
            "$ref": "#/components/schemas/TestCasesQueryObjectBindingTestByteEnum"
          },
          "isHidden": {
            "type": "boolean"
          }
        }
      },
      "TestCasesQueryObjectBindingTestNestedPerson": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "strings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "favoriteDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemDayOfWeek"
            }
          },
          "isHidden": {
            "type": "boolean"
          }
        }
      },
      "TestCasesQueryObjectBindingTestByteEnum": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Check",
          "Test",
          "AnotherCheck"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "TestCasesQueryObjectBindingTestRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesQueryObjectWithObjectsArrayBindingTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "person": {
            "$ref": "#/components/schemas/TestCasesQueryObjectWithObjectsArrayBindingTestPerson"
          }
        }
      },
      "TestCasesQueryObjectWithObjectsArrayBindingTestPerson": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "child": {
            "$ref": "#/components/schemas/TestCasesQueryObjectWithObjectsArrayBindingTestNestedPerson"
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCasesQueryObjectWithObjectsArrayBindingTestObjectInArray"
            }
          }
        }
      },
      "TestCasesQueryObjectWithObjectsArrayBindingTestNestedPerson": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCasesQueryObjectWithObjectsArrayBindingTestObjectInArray"
            }
          }
        }
      },
      "TestCasesQueryObjectWithObjectsArrayBindingTestObjectInArray": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "string": {
            "type": "string"
          },
          "bool": {
            "type": "boolean"
          },
          "int": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "long": {
            "type": "integer",
            "format": "int64"
          },
          "double": {
            "type": "number",
            "format": "double"
          },
          "enum": {
            "$ref": "#/components/schemas/SystemDayOfWeek"
          }
        }
      },
      "TestCasesQueryObjectWithObjectsArrayBindingTestRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesQueryParamBindingInEpWithoutReqResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "otherID": {
            "type": "integer",
            "description": "optional other id",
            "format": "int32",
            "nullable": true
          },
          "doubles": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "ints": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "guids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "floaty": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "TestCasesRateLimitTestsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "otherID": {
            "type": "integer",
            "description": "optional other id",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "FastEndpointsSecurityTokenResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FastEndpointsSecurityTokenRequest"
          },
          {
            "type": "object",
            "description": "base dto for access/refresh token responses",
            "additionalProperties": false,
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "the jwt access token which will be valid for the duration specified by AccessExpiry"
              }
            }
          }
        ]
      },
      "FastEndpointsSecurityTokenRequest": {
        "type": "object",
        "description": "base dto for access/refresh token renewal requests",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "description": "unique identifier of a user"
          },
          "refreshToken": {
            "type": "string",
            "description": "a single-use refresh token which will be valid for the duration specified by RefreshExpiry"
          }
        }
      },
      "TestCasesRouteBindingInEpWithoutReqResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "otherID": {
            "type": "integer",
            "description": "optional other id",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "TestCasesRouteBindingTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "string": {
            "type": "string"
          },
          "bool": {
            "type": "boolean"
          },
          "int": {
            "type": "integer",
            "format": "int32"
          },
          "long": {
            "type": "integer",
            "format": "int64"
          },
          "double": {
            "type": "number",
            "format": "double"
          },
          "decimal": {
            "type": "number",
            "format": "decimal"
          },
          "blank": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBody": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "custom": {
            "$ref": "#/components/schemas/TestCasesRouteBindingTestCustom"
          },
          "customList": {
            "$ref": "#/components/schemas/TestCasesRouteBindingTestCustomList"
          },
          "person": {
            "$ref": "#/components/schemas/TestCasesRouteBindingTestPerson"
          }
        }
      },
      "TestCasesRouteBindingTestCustom": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestCasesRouteBindingTestCustomList": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32"
        }
      },
      "TestCasesRouteBindingTestPerson": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "child": {
            "$ref": "#/components/schemas/TestCasesRouteBindingTestNestedPerson"
          },
          "numbers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "TestCasesRouteBindingTestNestedPerson": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "strings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TestCasesRouteBindingTestRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "custom": {
            "$ref": "#/components/schemas/TestCasesRouteBindingTestCustom"
          },
          "customList": {
            "$ref": "#/components/schemas/TestCasesRouteBindingTestCustomList"
          },
          "blank": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromBody": {
            "type": "string",
            "description": "overriden from body comment"
          }
        }
      },
      "TestCasesRoutingNonOptionalRouteParamTest_Request": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesRoutingOptionalRouteParamTest_Request": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesSTJInfiniteRecursionTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "res": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TestCasesSTJInfiniteRecursionTestResponse"
              }
            ]
          }
        }
      },
      "TestCasesTypedHeaderBindingTestMyRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FastEndpointsPlainTextRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TestCasesTypedResultTestResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "requestId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestCasesTypedResultTestRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FastEndpointsProblemDetails": {
        "type": "object",
        "description": "RFC7807 compatible problem details/ error response class. this can be used by configuring startup like so:\n\n    app.UseFastEndpoints(x => x.Errors.ResponseBuilder = ProblemDetails.ResponseBuilder);",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"
          },
          "title": {
            "type": "string",
            "default": "One or more validation errors occurred."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "default": 400
          },
          "instance": {
            "type": "string",
            "default": "/api/route"
          },
          "traceId": {
            "type": "string",
            "default": "0HMPNHL0JHL76:00000001"
          },
          "detail": {
            "type": "string",
            "description": "the details of the error",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FastEndpointsProblemDetails_Error"
            }
          }
        }
      },
      "FastEndpointsProblemDetails_Error": {
        "type": "object",
        "description": "the error details object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the error or property of the dto that caused the error",
            "default": "Error or field name"
          },
          "reason": {
            "type": "string",
            "description": "the reason for the error",
            "default": "Error reason"
          },
          "code": {
            "type": "string",
            "description": "the code of the error",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "the severity of the error",
            "nullable": true
          }
        }
      },
      "TestCasesUnitTestConcurrencyTestRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "TestCasesValidationErrorTestArrayRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stringArray": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TestCasesValidationErrorTestDictionaryRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stringDictionary": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "TestCasesValidationErrorTestListInListRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "numbersList": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "TestCasesValidationErrorTestListRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "numbersList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "TestCasesValidationErrorTestObjectArrayRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "objectArray": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCasesValidationErrorTestTObject"
            }
          }
        }
      },
      "TestCasesValidationErrorTestTObject": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "test": {
            "type": "string"
          }
        }
      },
      "UploadsImageSaveRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "maximum": 2000.0,
            "minimum": 10.0,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "maximum": 2000.0,
            "minimum": 10.0,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true
          }
        }
      },
      "UploadsImageSaveTypedRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "maximum": 2000.0,
            "minimum": 10.0,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "maximum": 2000.0,
            "minimum": 10.0,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true
          },
          "guidId": {
            "type": "string",
            "format": "guid"
          },
          "file1": {
            "type": "string",
            "format": "binary"
          },
          "file2": {
            "type": "string",
            "format": "binary"
          },
          "file3": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "file4": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "cars": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "jets": {
            "type": "array",
            "items": {}
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      },
      "ApiKey": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}